

prompt_parser1: |
  """

  example_parsing  = [
        {
            "instruction" : "Point to the bottle that I just placed.",

            "ground_truth" : {
                "past": "Identify the bottle that was placed",
                "present": "Point to",
                "future" : ""
            },
        },

        {
            "instruction" : "Help the person if he falls",
            "ground_truth" : {
                "past": "",
                "present": "Watch out for a person to fall",    
                "future" : "Help the person"
            },
        },
        {
            "instruction" : "Retrieve the bottle that was just filled",
            "ground_truth" : {
                "past": "Identify the bottle that was just filled",
                "present": "Retrieve",    
                "future" : ""
            },
        },
        {
            "instruction" : "Push the recently built stack",
            "ground_truth" : {
                "past": "Identify the recently built stack",
                "present": "Push",    
                "future" : ""
            },
        },
  ]

  There is a robot that needs to take a human instruction and figure out what has happened in the past, what it needs to do right now, and what it needs to do in the future if something happens. Given the human instruction like , return a dictionary with 'past', 'present', and 'future' as keys. Follow the format in {{ example_parsing }}. Always return a single dictionary with keys 'past', 'present', and 'future'. 

  """

  
prompt_parser2: |
  """
  example_parsing = {
    {
        "prompt" : The answer is "Is it the second cup from the left?".YES. The context "Is it the second cup from the left?" provides enough information to uniquely identify the cup in question in the given image.

        "output" : second cup from the left
    }

    {
        "prompt" : The answer is leftmost. YES. It is the leftmost cup.

        "output" : leftmost cup
    }
  }

  Identify the object of interest in the prompt given and return its properties in one line as a sentence. Follow the format in {{ example_parsing }}. Always return a single dictionary with keys 'prompt' and 'output'. Return only a dictionary and no other text.

  """

baseprompt_lvlm: |

    """
    . The video is from a robot's perspective. Return all answers from the robot's perspective. 

    """


# baseprompt_llm: |

#     """

#     There is a phrase grounding model that needs to uniquely ground a specific object which will help a robot interact with that object.\
#                     Given this image, is the context enough of information to uniquely identify an object? Reply with a YES if that object can be distinguished uniquely with the given context. \
#                     If not, ask more questions to uniquely identify the object using its spatial location or other properties. If object is not present, ask more questions to get the right object. \
#                     Example - Context: The object that was placed was a bottle. Question: Which one was it? The rightmost, second from right, third from left, right and second from top, right and bottommost, or?

#     """

# baseprompt_llm: |

#     """
#     There is a phrase grounding model that needs to uniquely ground a specific object which will help a robot interact with that object.\
#                     Given this image, is the context enough of information to uniquely identify an object? Reply with a YES if that object can be distinguished uniquely with the given CONTEXT and the image.  \
#                     If not ask one question with options to uniquely identify the object.
#     """




# baseprompt_llm_1: |

#     " Will a robot be able to identify what object(it should be unique) the human being is referring to given the scene? The huma being says:  "

baseprompt_llm_1: |
   

   Will a robot be able to identify what object (it should be unique) the human being is referring to given the scene? The human being says:
   


baseprompt_llm_2: |
   

   Scenario: there is a robot which needs to understand what single object in a scene a human being is referring to. 
   Reply with a YES or NO. If the answer is NO, ask one question to uniquely identify the object. \
   Anything that the human being says is from the viewer's perspective. 
   

   

prompt_questionExtractor: |

    """

     Extract the main question from the given text in the form of a question. 

    """